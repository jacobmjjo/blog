<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud on josephmjjo</title>
    <link>https://josephmjjo.github.io/tags/cloud/</link>
    <description>Recent content in Cloud on josephmjjo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© {year}</copyright>
    <lastBuildDate>Mon, 28 Feb 2022 02:29:38 +0900</lastBuildDate><atom:link href="https://josephmjjo.github.io/tags/cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>온프레미스와 Azure의 VPN 성공!!!</title>
      <link>https://josephmjjo.github.io/blog/sucess_vpn_connect/</link>
      <pubDate>Mon, 28 Feb 2022 02:29:38 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/sucess_vpn_connect/</guid>
      <description>오랫동안 시달렸던 Azure와 온프레미스와의 연결 문제가 드디어 해결 되었다.
결론은 호환성이다.
버전이 최신이어야 하고 Ikev버전은 2로 해야 한다. 더불어 traffic selector는 정책 기반이어야 한다.
위 조건은 microsoft에서 공식 Azure 사이트 cisco와 통신을 할때 샘플 조건이다.
VPN Gateway에 Cisco ASA 디바이스를 연결하는 샘플 구성 - Azure VPN Gateway
해당 버전에서는 cisco asa버전에서 ikev2를 사용하려면 8.4이상이면 된다고 하는데 정작 온프레미스는 8.6인데도 ikev2로 연결을 시도하면 통신이 갑작스레 안되는 경우가 잦았다.
어쩔 수 없이 ikev1로 변경했지만 역시나 통신이 어려웠다.</description>
    </item>
    
    <item>
      <title>traceroute와 ping 그리고 netstat</title>
      <link>https://josephmjjo.github.io/blog/traceroute-ping-and-netstat/</link>
      <pubDate>Wed, 23 Feb 2022 17:49:59 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/traceroute-ping-and-netstat/</guid>
      <description>네크워크 문제시 원인 파악을 위해 사용하는 도구를 살펴보다가 좋은 블로그 글이 있어 번역 및 요약을 했다
Ping, traceroute, and netstat: The network troubleshooting trifecta
제목에서 언급한 세가지 툴은 보통 네트워크 문제가 생길때 통신이 잘되고 있는지 아닌지 많이 사용한다.
Ping 각각 차이가 있는데 먼저 ping은 굉장히 많이 알려져 있는데 쉽게 설명하면 “님 거기 있나요?” 이 메시지를 원격 호스트에 보내는 거다. 만약 있으면 “네 있어요”로 오고 없으면 타임아웃이 뜬다.
프로토콜은 ICMP로 포트 번호는 없다고 한다.</description>
    </item>
    
    <item>
      <title>Azure에서 VPN 로그 보는 법</title>
      <link>https://josephmjjo.github.io/blog/azure_vpn_log_review/</link>
      <pubDate>Wed, 23 Feb 2022 01:45:51 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/azure_vpn_log_review/</guid>
      <description>아직도 VPN 연결이 안정적이지 않다.
이제껏 매번 MS 엔지니어를 거쳐서 로그를 전달 받다보니 굉장히 느리다.
그래서 이번에 로그 보는 법을 알려달라해서 알게 되었다.
경로는 모니터→ 진단 세팅→ vpn 검색→ 진단 설정 추가
그럼 모니터에서 로그를 들어가서 로그를 검색할 수 있는데 문제는 이게 쿼리문이다.
여러가지 시도 끝네 알아낸 쿼리 문이 바로 아래에 있는 쿼리문이다.
AzureDiagnostics|whereCategory==&amp;#34;IKEDiagnosticLog&amp;#34;|extendMessage1=Message|parseMessagewith*&amp;#34;Remote &amp;#34;RemoteIP&amp;#34;:&amp;#34;*&amp;#34;500: Local &amp;#34;LocalIP&amp;#34;:&amp;#34;*&amp;#34;500: &amp;#34;Message2|extendEvent=iif(Messagehas&amp;#34;SESSION_ID&amp;#34;,Message2,Message1)|projectTimeGenerated,RemoteIP,LocalIP,Event|whereRemoteIP==&amp;#34;124.243.8.133&amp;#34;|whereTimeGenerated&amp;gt;todatetime(&amp;#39;2022-02-24T05:00:00&amp;#39;)andTimeGenerated&amp;lt;todatetime(&amp;#39;2022-02-24T05:40:00&amp;#39;)|whereEventhas&amp;#34;[RECV Network Packet]&amp;#34;|orderbyTimeGenerated처음에 AzureDiagnostics만 할 경우에는 아래처럼 나온다.
AzureDiagnostics가 아마 진단 설정을 한 로그들을 보여주는 것이다.</description>
    </item>
    
    <item>
      <title>AWS 504 에러</title>
      <link>https://josephmjjo.github.io/blog/aws_504_error/</link>
      <pubDate>Mon, 24 May 2021 23:40:51 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/aws_504_error/</guid>
      <description>먼저 504가 무엇인지 알아야 한다.
504는 http에서 타임아웃이 발생한 경우에 생기는 오류이다.
그럼 생각해 볼수 있는 경우가 네트워크 단에서 잘못된 경로를 향하던가 아님 응용 프로그램에서 답을 못하거나 할 수 도 있다.(사실 다 찾아봐야 정확히 알 수가 있다.
위키트리에서는 아래의 내용으로 설명을 한다.
504(게이트웨이 시간초과): 서버가 게이트웨이나 프록시 역할을 하고 있거나 또는 업스트림 서버에서 제때 요청을 받지 못했다.
아무튼 보통 에러가 발생하는 경우는 웹 브라우저에서 504가 뜬 것을 확인 할수 있는데 이게 web서버에서 난건지 Was에서 난건지 도통 알 수가 없다.</description>
    </item>
    
    <item>
      <title>아키텍처 타입</title>
      <link>https://josephmjjo.github.io/blog/type_architecture/</link>
      <pubDate>Thu, 27 Feb 2020 21:58:19 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/type_architecture/</guid>
      <description>아키텍처에는 여러가지 유형이 있다.
크게 2가지가 있는데
 집약형 분할형  으로 이 글에서는 분할형을 또
 수직 분할형 수평 분할형 지리 분할형  그리고 마지막으로 요새 대세라고 불리우는 클라우드 가 있다.
그럼 간략하게 각 아키텍처들을 설명해 보겠다.
1.집약형 말 그대로 한 곳에 서버들을 모아서 관리하는 시스템이다.
기업의 주요 업무를 처리하고 그렇기에 고장이 등으로 멈추지 않도록 고민을 많이 해야한다.
한 곳의 집약 되어있기 때문에 관리하기가 쉽다.
하지만 큰 단점은 비용이 많이 득고 확장성 또한 많은 제약이 있다.</description>
    </item>
    
    <item>
      <title>클라우드로 인프라 구성할때.... 개념</title>
      <link>https://josephmjjo.github.io/blog/cloud_infra_architech/</link>
      <pubDate>Thu, 09 Jan 2020 21:18:07 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/cloud_infra_architech/</guid>
      <description>시스템 구성 예
 소규모 웹 서비스 로드 밸런서 웹 서버 x 2 DB 서버 x 1~ 2  보통 부하를 줄이려고 밸런싱을 함
하지만 이번 경우는 부하를 경감하는 것보다 가용성 때문임
DB는 중지되지 않는 구성을 만들기가 쉽지 않음 레코드가 계속 갱신 되기 때문임
또한 DB로 세션 정보를 관리하는 경우, 세션 정보를 유지한 채로 Act/Sby를 해야함
예를 들면 쇼핑 사이트에 있는 장바구니를 생각하면 됨
해결 방안은
 DB 서버의 레플리케이션 기술로 확장 DB 이외의 위치에 데이터 레플리케이션하기  레플리케이션이란 데이터 저장과 백업하는 방법과 관련이 있는 데이터를 호스트 컴퓨터에서 다른 컴퓨터로 복사하는 것 (위키백과)   애플리케이션 수정으로 세션 정보 공유하기  장애 지점은 장애가 발생할 수 있는 장소, 장비, 애플리케이션 등을 말합니다.</description>
    </item>
    
    <item>
      <title>Serverless</title>
      <link>https://josephmjjo.github.io/blog/serverless/</link>
      <pubDate>Sun, 06 Oct 2019 00:27:48 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/serverless/</guid>
      <description>Serverless 서버가 없다는 뜻이 아님
단지 가상머신에 서버 설치후 서버를 관리할 필요가 없다는 뜻임
서버 개수, 네트워크 종류, 서버 사양을 고려할 필요가 없음
 Baas(Backend as as a Service) 서버확장, 보안성 등의 서버개발을 지원해줌.
개발자들이 서버 개발 안해도 되고 서버의 이용자가 순식간에 늘어나도 알아서 확장 가능
대표적으로 AWS Firebase가 있다.
단점
 클라이언트 위주의 코드 비용 복잡한 쿼리 불가능함   FaaS(Function as a Service) FaaS는 프로젝트를 여러개의 함수로 쪼갬, 분산된 컴퓨팅 자원에 함수를 등록하고, 실행되는 횟수만큼 비용을 지불하는 방식</description>
    </item>
    
    <item>
      <title>Cloud 서비스 종류</title>
      <link>https://josephmjjo.github.io/blog/cloud_%EC%A2%85%EB%A5%98/</link>
      <pubDate>Sat, 14 Sep 2019 23:23:18 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/cloud_%EC%A2%85%EB%A5%98/</guid>
      <description>클라우드 컴퓨팅 서비스! 주요 3대 서비스로는
 Software as a Service(SaaS) Platform as a Service(Paas) Infrastructure as a Service(IaaS)   SaaS(Software as a Service) 소프트웨어로서의 서비스 공급업체나 서비스 제공자에의 의해 호스트가 된 응용프로그램을 인터넷을 통해 고객에게 제공되는 소프트웨어 배포 모델이다.
SaaS 는 SOA(Service Oriented Architecture) 나 웹 서비스를 지원하는 기술로 널리 제공되는 모델이 되고 있습니다. 인 이 서비스는 인터넷을 이용하는 전세계의 유저들이 사용할 수 있다.
전통적으로, 소프트웨어 응용프로그램은 선결제를 유도하면서 컴퓨터의 설치의 필요성이 있었다.</description>
    </item>
    
    <item>
      <title>Cloud</title>
      <link>https://josephmjjo.github.io/blog/cloud/</link>
      <pubDate>Fri, 06 Sep 2019 23:13:28 +0900</pubDate>
      
      <guid>https://josephmjjo.github.io/blog/cloud/</guid>
      <description>클라우드 컴퓨팅이란? 클라우드 컴퓨팅이란 컴퓨팅 파워(CPU, RAM, Network Speeds, Storage OS 소프트웨어)를 물리적인 설치 보다는 네트워크를 이용해서 고객에게 배달해주는 것이다.(AWS, Azure, Google Cloud가 대표적임)
클라우드 컴퓨팅을 쉽게 설명하자면 당신이 버스나 기차를 통해 여행을 떠날 때, 당신은 도착지에 해당하는 티켓을 구매하고 도착지에 도착 할 때까지 좌석에 앉는다 마찬가지로 다른 승객도 똑같이 표를 구매하고 같은 버스 좌석에 앉는다.
그렇다고 다른 승객이 당신의 여행을 방해 하는 건 아니다. 그리고 당신은 도착지에 도착하면 운전기사에게 감사를 표하고 버스에서 내린다.</description>
    </item>
    
  </channel>
</rss>
